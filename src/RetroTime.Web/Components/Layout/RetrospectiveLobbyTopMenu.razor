@using RetroTime.Domain.Entities

<aside class="menu">
    <TopMenu BrandIsClickable="false">
        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
            <li class="nav-item">
                <NavLink class="nav-link" href="#" Match="NavLinkMatch.All">
                    @this._layoutInfo.Title
                </NavLink>
            </li>
        </ul>
        <div class="retrospective-progress-container">
            <ul class="navbar-nav retrospective-progress @(CurrentStage == RetrospectiveStage.NotStarted ? "retrospective-progress--inactive" : String.Empty)">
                <RetrospectiveProgressItem
                    CurrentStage="@CurrentStage"
                    ApplicableTo="@RetrospectiveStage.Writing"
                    Text="Write"/>

                <RetrospectiveProgressItem
                    CurrentStage="@CurrentStage"
                    ApplicableTo="@RetrospectiveStage.Discuss"
                    Text="Discuss"/>

                <RetrospectiveProgressItem
                    CurrentStage="@CurrentStage"
                    ApplicableTo="@RetrospectiveStage.Grouping"
                    Text="Group"/>

                <RetrospectiveProgressItem
                    CurrentStage="@CurrentStage"
                    ApplicableTo="@RetrospectiveStage.Voting"
                    Text="Vote"/>

                <RetrospectiveProgressItem
                    CurrentStage="@CurrentStage"
                    ApplicableTo="@RetrospectiveStage.Finished"
                    Text="Finished"/>
            </ul>
        </div>
    </TopMenu>
</aside>

@code
{
#nullable disable
    private RetrospectiveLayoutInfo _layoutInfo = new RetrospectiveLayoutInfo("Loading...");

    private RetrospectiveStage CurrentStage => _layoutInfo.Stage ?? RetrospectiveStage.NotStarted;

    public void Update(in RetrospectiveLayoutInfo layoutInfo)
    {
        _layoutInfo = layoutInfo;

        StateHasChanged();
    }
}